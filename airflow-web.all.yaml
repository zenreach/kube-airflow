apiVersion: v1
kind: Service
metadata:
  name: airflow-web
spec:
  selector:
    app: airflow
    tier: web
  ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: airflow-web
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: airflow.foundation.gke.cntr.io
      http:
        paths:
          - path: /
            backend:
              serviceName: airflow-web
              servicePort: web
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: airflow
    tier: web
  name: airflow-web
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
      tier: web
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: airflow
        tier: web
    spec:
      volumes:
      - name: dags-volume
        configMap:
          name: airflow-dags
          items:
          - key: visits_etls.py
            path: visits_etls.py
      containers:
      - args:
        - webserver
        - --port
        - "8080"
        env:
        - name: AIRFLOW_HOME
          value: /usr/local/airflow
        image: gcr.io/zenreach-177100/kube-airflow:1.8.0.0-1.6.1-0.10
        imagePullPolicy: Always
        volumeMounts:
          - name: dags-volume
            mountPath: /usr/local/airflow/dags
        name: web
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30